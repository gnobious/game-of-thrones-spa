{"version":3,"sources":["components/errorMessage/error.jpg","components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/itemDetails/itemDetails.js","components/itemDetails/index.js","components/rowBlock/index.js","components/rowBlock/rowBlock.js","components/pages/characterPage.js","components/pages/booksPage.js","components/pages/housesPage.js","components/pages/booksItem.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","HeaderBlock","styled","div","HeaderTitle","HeaderLinks","ul","Header","to","GotService","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllCharacters","map","_transformCharacter","getCharacter","id","character","getAllHouses","_transformHouse","getHouse","house","getAllBooks","_transformBook","getBook","book","_extractId","item","match","char","name","isSet","gender","born","died","culture","region","words","titles","overlord","ancestralWeapons","numberOfPages","publisher","released","this","data","Spinner","className","ErrorMessage","src","img","alt","RandomChar","gotService","state","loading","error","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","then","catch","timerId","setInterval","props","interval","clearInterval","errorMessage","spinner","content","Component","defaultProps","View","ItemList","itemList","getData","arr","label","renderItem","key","onClick","onItemSelected","items","renderItems","Field","field","ItemDetails","onItemDetailsLoaded","updateItem","prevProps","itemId","React","Children","children","child","cloneElement","showItem","RowBlock","left","right","Row","Col","md","CharacterPage","selectedChar","itemDetails","BooksPage","history","push","withRouter","HousesPage","selectedHouse","BooksItem","bookId","App","showRandomChar","toggleRandomChar","console","log","basename","Container","lg","size","offset","path","component","exact","render","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e4e61b9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.22389cf4.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderTitle = styled.div`\r\n    font-size: 24px;\r\n    color: #fff;\r\n    margin: 0;\r\n`;\r\n\r\nconst HeaderLinks = styled.ul`\r\n    display: flex;\r\n    margin: 0;\r\n    align-items: center;\r\n    color: #fff;\r\n    list-style-type: none;\r\n    li {\r\n        margin-right: 20px;\r\n        font-size: 18px;        \r\n    }\r\n`;\r\nconst Header = () => {\r\n    return (\r\n        <HeaderBlock>\r\n            <HeaderTitle>\r\n                <Link to='/'>\r\n                    Game of Thrones DB\r\n                </Link>\r\n            </HeaderTitle>\r\n            <HeaderLinks>\r\n                <li>\r\n                    <Link to='/characters/'>Characters</Link>\r\n                </li>     \r\n                <li>\r\n                    <Link to='/houses/'>Houses</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to ='/books/'>Books</Link>\r\n                </li>           \r\n            </HeaderLinks>\r\n        </HeaderBlock>\r\n    );\r\n};\r\n\r\nexport default Header;","import Header from './header';\r\n\r\nexport default Header;","export default class GotService {\r\n\r\n    constructor() {\r\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async () => {\r\n        const res = await this.getResource('/characters?page=5&pageSize=10');\r\n        return res.map(this._transformCharacter);\r\n    }\r\n    \r\n    getCharacter = async (id) => {\r\n        const character = await this.getResource(`/characters/${id}`);\r\n        return this._transformCharacter(character);\r\n    }\r\n\r\n    getAllHouses = async () => {\r\n        const res = await this.getResource(`/houses/`);\r\n        return res.map(this._transformHouse);\r\n    }\r\n\r\n    getHouse = async (id) => {\r\n        const house = await this.getResource(`/houses/${id}`);\r\n        return this._transformHouse(house);\r\n    }\r\n\r\n    getAllBooks = async () => {\r\n        const res = await this.getResource(`/books/`);\r\n        return res.map(this._transformBook);\r\n    }\r\n\r\n    getBook = async (id) => {\r\n        const book = await this.getResource(`/books/${id}`);\r\n        return this._transformBook(book);\r\n    }\r\n\r\n    isSet(data) {\r\n        if (data) {\r\n            return data\r\n        } else {\r\n            return 'no data :('\r\n        }\r\n    }\r\n\r\n    _extractId = (item) => {\r\n        const idRegExp = /\\/([0-9]*)$/;\r\n        return item.url.match(idRegExp)[1];\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: this._extractId(char),\r\n            name: this.isSet(char.name),\r\n            gender: this.isSet(char.gender),\r\n            born: this.isSet(char.born),\r\n            died: this.isSet(char.died),\r\n            culture: this.isSet(char.culture)\r\n        };\r\n    }\r\n\r\n    _transformHouse = (house)=> {\r\n        return {\r\n            id: this._extractId(house),\r\n            name: this.isSet(house.name),\r\n            region: this.isSet(house.region),\r\n            words: this.isSet(house.words),\r\n            titles: this.isSet(house.titles),\r\n            overlord: this.isSet(house.overlord),\r\n            ancestralWeapons: this.isSet(house.ancestralWeapons)\r\n        };\r\n    }\r\n\r\n    _transformBook = (book) => {\r\n        return {\r\n            id: this._extractId(book),\r\n            name: this.isSet(book.name),\r\n            numberOfPages: this.isSet(book.numberOfPages),\r\n            publisher: this.isSet(book.publisher),\r\n            released: this.isSet(book.released)\r\n        };\r\n    }\r\n}\r\n","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react'; \r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-double-ring-cd3wlp60v\"><div className=\"ldio-v364ej6is5\">\r\n            <div></div>\r\n            <div></div>\r\n            <div><div></div></div>\r\n            <div><div></div></div>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import ErrorMessage from './errorMessage';\r\nexport default ErrorMessage;","import React from 'react';\r\nimport './errorMessage.css';\r\nimport img from './error.jpg';\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <>\r\n            <img src={img} alt='error'></img>\r\n            <span>Something goes wrong</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React, {Component} from 'react';\r\nimport './randomChar.css';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\nexport default class RandomChar extends Component {\r\n\r\n    gotService = new gotService();\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    static defaultProps = {\r\n        interval: 15000\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n        this.timerId = setInterval(this.updateChar, this.props.interval);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random()*140+25); //From 25 to 140\r\n        this.gotService.getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { char, loading, error } = this.state;\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char}/> : null;\r\n        \r\n        return (\r\n            <div className=\"random-block rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRandomChar.defaultProps = {\r\n    interval: 15000\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, gender, born, died, culture} = char;\r\n    return (\r\n        <>\r\n            <h4>Random Character: {name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Gender </span>\r\n                    <span>{gender}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Born </span>\r\n                    <span>{born}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Died </span>\r\n                    <span>{died}</span>\r\n                </li>\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">Culture </span>\r\n                    <span>{culture}</span>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    )\r\n}","import RandomChar from './randomChar';\r\n\r\nexport default RandomChar;","import ItemList from './itemList';\r\n\r\nexport default ItemList;","import React, {Component} from 'react';\r\nimport './itemList.css';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nexport default class ItemList extends Component {\r\n\r\n    state = {\r\n        itemList: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {getData} = this.props;\r\n\r\n        getData()\r\n            .then( (itemList) => {\r\n                this.setState({\r\n                    itemList,\r\n                    error: false\r\n                });\r\n            })\r\n            .catch( () => {this.onError()} )\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            itemList: null,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    onError = (status) => {\r\n        this.setState({\r\n            itemList: null,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.map((item) => {\r\n            const {id} = item;\r\n            const label = this.props.renderItem(item)\r\n            return (\r\n                <li \r\n                    key={id}\r\n                    className=\"list-group-item\"\r\n                    onClick={ () => this.props.onItemSelected(id) }>\r\n                    {label}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {itemList, error} = this.state;\r\n\r\n        if(error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        if (!itemList) {\r\n            return (\r\n                <div className=\"char-details rounded\">\r\n                    <Spinner/>\r\n                </div>\r\n            )\r\n        }        \r\n\r\n        const items = this.renderItems(itemList);\r\n        \r\n        return(\r\n            <ul className=\"item-list list-group\">\r\n                {items}\r\n            </ul>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './itemDetails.css';\r\nimport ErrorMessage from '../errorMessage';\r\nimport Spinner from '../spinner';\r\n\r\nconst Field = ({item, field, label}) => {\r\n    return (\r\n        <li className=\"list-group-item d-flex justify-content-between\">\r\n            <span className=\"term\">{label}</span>\r\n            <span>{item[field]}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport {\r\n    Field\r\n};\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n    state = {\r\n        item: null,\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItem();        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.updateItem();\r\n        }\r\n    }\r\n\r\n    onItemDetailsLoaded = (item) => {\r\n        this.setState({\r\n            item,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    updateItem() {\r\n        const {itemId, getData} = this.props;\r\n        if (!itemId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        getData(itemId)\r\n            .then(this.onItemDetailsLoaded)\r\n            .catch( () => this.onError() )            \r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            item: null,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    showItem(item) {\r\n    const {name} = item;\r\n        return (\r\n            <>            \r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        React.Children.map(this.props.children, (child) => {\r\n                            return React.cloneElement(child, {item})\r\n                        })\r\n                    }\r\n                </ul>            \r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {item, loading, error} = this.state;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? \r\n            <div className=\"item-details rounded\">\r\n                <Spinner/>\r\n            </div> : null;\r\n        const content = !(loading || error) ? this.showItem(item): null;        \r\n        \r\n        if (!item) {\r\n            return(\r\n                <div className=\"item-details rounded\">\r\n                    <span className='select-error'>Please select an item</span>\r\n                </div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div className=\"item-details rounded\">\r\n                    {errorMessage}                \r\n                    {spinner}\r\n                    {content}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n","import ItemDetails, {Field} from './itemDetails';\r\nexport default ItemDetails;\r\nexport {\r\n    Field\r\n}","import RowBlock from './rowBlock';\r\nexport default RowBlock;","import React from 'react';\r\nimport {Col, Row} from 'reactstrap';\r\n\r\nconst RowBlock = ({left, right}) => {\r\n    return (\r\n        <Row>\r\n            <Col md='6'>\r\n                {left}\r\n            </Col>\r\n            <Col md='6'>\r\n                {right}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default RowBlock;","import React, {Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport RowBlock from '../rowBlock';\r\n\r\nexport default class CharacterPage extends Component {\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        selectedChar: null,\r\n        error: false\r\n    }\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState ({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n                onItemSelected={this.onItemSelected}\r\n                getData={this.gotService.getAllCharacters}\r\n                renderItem={({name,gender}) => `${name} (${gender})`}/>\r\n        )\r\n\r\n        const itemDetails = (\r\n            <ItemDetails \r\n            itemId={this.state.selectedChar}\r\n            getData={this.gotService.getCharacter} >\r\n                <Field field='gender' label='Gender' />\r\n                <Field field='born' label='Born' />\r\n                <Field field='died' label='Died' />\r\n                <Field field='culture' label='Culture' />\r\n            </ItemDetails>\r\n        )\r\n        return (            \r\n            <RowBlock left={itemList} right={itemDetails}/>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass BooksPage extends Component {\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return (            \r\n            <ItemList \r\n                onItemSelected={(itemId) => {\r\n                    this.props.history.push(itemId)\r\n                }}\r\n                getData={this.gotService.getAllBooks}\r\n                renderItem={({name}) => name}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(BooksPage);","import React, {Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport RowBlock from '../rowBlock';\r\n\r\nexport default class HousesPage extends Component {\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        selectedHouse: null,\r\n        error: false\r\n    }\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState ({\r\n            selectedHouse: id\r\n        })\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n                onItemSelected={this.onItemSelected}\r\n                getData={this.gotService.getAllHouses}\r\n                renderItem={({name}) => name}/>\r\n        )\r\n\r\n        const itemDetails = (\r\n            <ItemDetails \r\n            itemId={this.state.selectedHouse}\r\n            getData={this.gotService.getHouse} >\r\n                <Field field='region' label='Region'/>\r\n                <Field field='words' label='Words' />\r\n                <Field field='titles' label='Titles' />\r\n                <Field field='ancestralWeapons' label='Ancestral Weapons' />\r\n            </ItemDetails>\r\n        )\r\n        return (            \r\n            <RowBlock left={itemList} right={itemDetails}/>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport gotService from '../../services/gotService';\r\n\r\nexport default class BooksItem extends Component {\r\n    gotService = new gotService();\r\n\r\n    render() {\r\n        return (\r\n            <ItemDetails \r\n            itemId={this.props.bookId}\r\n            getData={this.gotService.getBook} >\r\n                <Field field='numberOfPages' label='Number of pages'/>\r\n                <Field field='publisher' label='Publisher'/>\r\n                <Field field='released' label='Released'/>\r\n            </ItemDetails>\r\n        )        \r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\nimport {Col, Row, Container} from 'reactstrap';\r\nimport Header from '../header';\r\nimport RandomChar from '../randomChar';\r\nimport ErrorMessage from '../errorMessage';\r\nimport {CharacterPage, BooksPage, HousesPage, BooksItem} from '../pages';\r\nimport gotService from '../../services/gotService';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  gotService = new gotService();\r\n\r\n  state = {\r\n    showRandomChar: true,\r\n    error: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    console.log('error');\r\n    this.setState({\r\n      error: true\r\n    })\r\n  }\r\n\r\n  toggleRandomChar = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        showRandomChar: !state.showRandomChar\r\n      }\r\n    });\r\n  };\r\n \r\n  render () {    \r\n    const char = this.state.showRandomChar ? <RandomChar/> : null;\r\n\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    return (\r\n      <Router\r\n        basename=\"/game-of-thrones-spa\">\r\n        <div className=\"app\">\r\n          <Container>\r\n            <Header />\r\n          </Container>\r\n          <Container>\r\n            <Row>\r\n              <Col lg={{size: 5, offset: 0}}>              \r\n                <button \r\n                className = \"toggle-btn\" \r\n                onClick = {this.toggleRandomChar}>Hide / Show</button>\r\n                {char}\r\n              </Col>\r\n            </Row>\r\n            <Route path='/characters' component={CharacterPage}/>            \r\n            <Route path='/houses' component={HousesPage}/>\r\n            <Route path='/books' exact component={BooksPage}/>\r\n            <Route path='/books/:id' render={\r\n              ({match}) => {\r\n                const {id} = match.params;\r\n              return <BooksItem bookId={id} />}\r\n            }/>\r\n          </Container>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }  \r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render( <App />, document.getElementById('root') );\r\n"],"sourceRoot":""}